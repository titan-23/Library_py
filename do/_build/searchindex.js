Search.setIndex({"docnames": ["data_structures/data_structures", "data_structures/data_structures.avltree", "data_structures/data_structures.avltree.avltree_dict", "data_structures/data_structures.avltree.avltree_multiset", "data_structures/data_structures.avltree.avltree_multiset2", "data_structures/data_structures.avltree.avltree_multiset3", "data_structures/data_structures.avltree.avltree_set", "data_structures/data_structures.avltree.avltree_set2", "data_structures/data_structures.avltree.avltree_set3", "data_structures/data_structures.avltree.lazy_avltree", "data_structures/data_structures.avltree.persistent_avltree_list", "data_structures/data_structures.avltree.persistent_lazy_avltree", "data_structures/data_structures.avltree.reversible_lazy_avltree", "data_structures/data_structures.fenwick_tree", "data_structures/data_structures.fenwick_tree.dynamic_fenwick_tree", "data_structures/data_structures.fenwick_tree.dynamic_fenwick_tree_2D", "data_structures/data_structures.fenwick_tree.fenwick_tree", "data_structures/data_structures.fenwick_tree.fenwick_tree_2D", "data_structures/data_structures.fenwick_tree.fenwick_tree_RAQ", "data_structures/data_structures.fenwick_tree.fenwick_tree_abst", "data_structures/expander", "data_structures/modules", "data_structures/segment_tree", "index", "modules"], "filenames": ["data_structures/data_structures.rst", "data_structures/data_structures.avltree.rst", "data_structures/data_structures.avltree.avltree_dict.rst", "data_structures/data_structures.avltree.avltree_multiset.rst", "data_structures/data_structures.avltree.avltree_multiset2.rst", "data_structures/data_structures.avltree.avltree_multiset3.rst", "data_structures/data_structures.avltree.avltree_set.rst", "data_structures/data_structures.avltree.avltree_set2.rst", "data_structures/data_structures.avltree.avltree_set3.rst", "data_structures/data_structures.avltree.lazy_avltree.rst", "data_structures/data_structures.avltree.persistent_avltree_list.rst", "data_structures/data_structures.avltree.persistent_lazy_avltree.rst", "data_structures/data_structures.avltree.reversible_lazy_avltree.rst", "data_structures/data_structures.fenwick_tree.rst", "data_structures/data_structures.fenwick_tree.dynamic_fenwick_tree.rst", "data_structures/data_structures.fenwick_tree.dynamic_fenwick_tree_2D.rst", "data_structures/data_structures.fenwick_tree.fenwick_tree.rst", "data_structures/data_structures.fenwick_tree.fenwick_tree_2D.rst", "data_structures/data_structures.fenwick_tree.fenwick_tree_RAQ.rst", "data_structures/data_structures.fenwick_tree.fenwick_tree_abst.rst", "data_structures/expander.rst", "data_structures/modules.rst", "data_structures/segment_tree.rst", "index.rst", "modules.rst"], "titles": ["data_structures package", "data_structures.avltree package", "data_structures.avltree.avltree_dict module", "data_structures.avltree.avltree_multiset module", "data_structures.avltree.avltree_multiset2 module", "data_structures.avltree.avltree_multiset3 module", "data_structures.avltree.avltree_set module", "data_structures.avltree.avltree_set2 module", "data_structures.avltree.avltree_set3 module", "data_structures.avltree.lazy_avltree module", "data_structures.avltree.persistent_avltree_list module", "data_structures.avltree.persistent_lazy_avltree module", "data_structures.avltree.reversible_lazy_avltree module", "data_structures.fenwick_tree package", "data_structures.fenwick_tree.dynamic_fenwick_tree module", "data_structures.fenwick_tree.dynamic_fenwick_tree_2D module", "data_structures.fenwick_tree.fenwick_tree module", "data_structures.fenwick_tree.fenwick_tree_2D module", "data_structures.fenwick_tree.fenwick_tree_RAQ module", "data_structures.fenwick_tree.fenwick_tree_abst module", "expander module", "Library_py", "segment_tree module", "Welcome to titanlib's documentation!", "data_structures"], "terms": {"class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22], "avltreedict": [0, 1, 2], "counter": 2, "false": [2, 16], "default": 2, "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22], "\u30bd\u30fc\u30b9": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22], "\u30d9\u30fc\u30b9\u30af\u30e9\u30b9": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22], "generic": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19], "\u30d1\u30e9\u30e1\u30fc\u30bf": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22], "iterable": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 22], "--": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22], "bool": [2, 3, 4, 5, 6, 7, 8, 16, 22], "callable": [2, 9, 11, 12, 19, 22], "node": [1, 2, 5, 8, 9, 10, 11, 12], "key": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "val": [2, 3, 4, 5], "object": [2, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 22], "items": [1, 2, 3, 5], "keys": [1, 2, 3, 5], "tolist": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 22], "_items": [1, 2, 3, 4, 5], "\u623b\u308a\u5024": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22], "list": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 22], "tuple": [2, 3, 4, 5, 9, 10, 11, 12], "values": [1, 2, 3, 5], "avltreemultiset": [0, 1, 3, 4, 5], "orderedmultisetinterface": [3, 5], "add": [1, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19], "int": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22], "clear": [1, 3, 4, 5, 6, 7, 8, 9, 12], "count": [1, 3, 4, 5], "discard": [1, 3, 4, 5, 6, 7, 8], "_all": [1, 3, 4, 5], "ge": [1, 3, 4, 5, 6, 7, 8], "get": [1, 3, 4, 5, 6, 7, 8, 15, 16, 17, 22], "_elm": [1, 3, 5], "_max": [1, 3, 4, 5, 6, 7, 8], "_min": [1, 3, 4, 5, 6, 7, 8], "gt": [1, 3, 4, 5, 6, 7, 8], "index": [1, 3, 5, 6, 8, 22], "_keys": [1, 3, 5], "_right": [1, 3, 5, 6, 8, 13, 14, 16, 21, 22], "iterator": [3, 5], "le": [1, 3, 4, 5, 6, 7, 8], "len": [1, 3, 5], "lt": [1, 3, 4, 5, 6, 7, 8], "pop": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "remove": [1, 3, 4, 5, 6, 7, 8], "reserve": [1, 3, 4, 6, 7], "show": [1, 3, 5, 16, 22], "avltreeset": [0, 1, 6, 7, 8], "orderedsetinterface": [6, 7, 8], "lazyavltree": [0, 1, 9], "op": [9, 11, 12, 19, 22], "mapping": [9, 11, 12], "composition": [9, 11, 12], "id": [9, 11, 12], "all": [9, 12, 22], "_apply": [1, 9, 12], "_prod": [1, 9, 12, 21, 22], "_reverse": [1, 9, 12], "apply": [9, 11, 12], "insert": [9, 10, 11, 12], "merge": [9, 10, 11, 12], "other": [9, 10, 11, 12], "prod": [9, 11, 12, 16, 19, 22], "reverse": [9, 11, 12], "split": [9, 10, 11, 12], "persistentavltreelist": [0, 1, 10], "_root": [10, 11], "balance": [10, 11], "copy": [10, 11], "persistentlazyavltree": [0, 1, 11], "lazy": 11, "reversiblelazyavltree": [0, 1, 12], ".avltree": [0, 21, 24], "submodules": [0, 21, 24], "_dict": [0, 1], "_multiset": [0, 1], "_set": [0, 1], ".lazy": [0, 1], "_avltree": [0, 1], ".persistent": [0, 1], "_list": [0, 1], "_lazy": [0, 1], ".reversible": [0, 1], ".node": 1, ".items": 1, "()": [1, 13, 21, 22], ".keys": 1, ".tolist": [1, 13, 21], ".values": 1, ".add": [1, 13], ".clear": 1, ".count": 1, ".discard": 1, ".ge": 1, ".get": [1, 13, 21], ".gt": 1, ".index": 1, ".le": 1, ".len": 1, ".lt": 1, ".pop": 1, ".remove": 1, ".reserve": 1, ".show": [1, 13, 21], ".all": [1, 21], ".apply": 1, ".insert": 1, ".merge": 1, ".prod": [1, 13, 21], ".reverse": 1, ".split": 1, ".balance": 1, ".copy": 1, "segment": 21, "_tree": [0, 21, 24], "module": [21, 24], "segmenttree": [21, 22], ".max": 21, ".min": 21, "_left": [13, 14, 16, 21, 22], ".set": [13, 21], "avltree": [], "package": [21, 24], "data": 21, "_structures": 21, "subpackages": [21, 24], "\u7d22\u5f15": 23, "\u30e2\u30b8\u30e5\u30fc\u30eb": 23, "\u691c\u7d22": 23, "\u30da\u30fc\u30b8": 23, "contents": [21, 24], "_or": [16, 18, 19, 22], "_a": [16, 18, 19, 22], "union": 22, "\u8981\u7d20\u6570": 22, "\u307e\u305f": 22, "\u3067\u3059": 22, "\u4e8c\u9805": 22, "\u6f14\u7b97": 22, "\u95a2\u6570": 22, "\u5358\u4f4d\u5143": 22, "\u30b5\u30f3\u30d7\u30eb": 22, "\u9577\u3055": 22, "\u533a\u9593": 22, "min": 22, "\u30bb\u30b0": 22, "\u4f5c\u308b": 22, "\u3068\u304d": 22, "\u4ee5\u4e0b": 22, "\u3088\u3046": 22, "\u307e\u3059": 22, ">>": 22, "(input": 22, "lambda": 22, "(s": 22, "> e": 22, "inf": 22, "seg": 22, "(n": 22, "max": 22, "find": 22, "the": 22, "largest": 22, ".t": 22, "([": [15, 17, 22], "))": [15, 17, 22], "true": 22, "/ o": [15, 17, 22], "(logn": 22, "smallest": 22, "set": [15, 17, 22], "\u756a\u76ee": 22, "\u66f4\u65b0": 22, "dynamicfenwicktree": [0, 13, 14, 15], "2d": [0, 13], "fenwicktreeabst": [0, 13, 19], "fenwicktreeraq": [0, 13, 18], ".dynamic": [0, 13], "_fenwick": [0, 13], ".bisect": 13, ".pref": 13, ".sum": 13, ".fenwick": [0, 21, 24], "fenwicktree": [0, 13, 16, 17], "_inversion": [13, 16], "_num": [13, 16], ".suff": 13, "_raq": [0, 13], "_range": [13, 18], "_abst": [0, 13], "build": 14, ").": 14, "bisect": [14, 16], "pref": [14, 16, 19], "sum": [14, 15, 16, 17, 18, 19], "(hwloghlogw": [15, 17], "to": [15, 17], "[h": [15, 17], "][": [15, 17], "].": [15, 17], "(logh": [15, 17], "logw": [15, 17], "retrun": [15, 17], "of": [15, 17], "static": 16, "compress": 16, "suff": [16, 19], "inv": 19, "expander": 21}, "objects": {"": [[0, 0, 0, "-", "data_structures"], [22, 0, 0, "-", "segment_tree"]], "data_structures": [[1, 0, 0, "-", "avltree"], [13, 0, 0, "-", "fenwick_tree"]], "data_structures.avltree": [[2, 0, 0, "-", "avltree_dict"], [3, 0, 0, "-", "avltree_multiset"], [4, 0, 0, "-", "avltree_multiset2"], [5, 0, 0, "-", "avltree_multiset3"], [6, 0, 0, "-", "avltree_set"], [7, 0, 0, "-", "avltree_set2"], [8, 0, 0, "-", "avltree_set3"], [9, 0, 0, "-", "lazy_avltree"], [10, 0, 0, "-", "persistent_avltree_list"], [11, 0, 0, "-", "persistent_lazy_avltree"], [12, 0, 0, "-", "reversible_lazy_avltree"]], "data_structures.avltree.avltree_dict": [[2, 1, 1, "", "AVLTreeDict"]], "data_structures.avltree.avltree_dict.AVLTreeDict": [[2, 1, 1, "", "Node"], [2, 2, 1, "", "items"], [2, 2, 1, "", "keys"], [2, 2, 1, "", "tolist_items"], [2, 2, 1, "", "values"]], "data_structures.avltree.avltree_multiset": [[3, 1, 1, "", "AVLTreeMultiset"]], "data_structures.avltree.avltree_multiset.AVLTreeMultiset": [[3, 2, 1, "", "add"], [3, 2, 1, "", "clear"], [3, 2, 1, "", "count"], [3, 2, 1, "", "discard"], [3, 2, 1, "", "discard_all"], [3, 2, 1, "", "ge"], [3, 2, 1, "", "get_elm"], [3, 2, 1, "", "get_max"], [3, 2, 1, "", "get_min"], [3, 2, 1, "", "gt"], [3, 2, 1, "", "index"], [3, 2, 1, "", "index_keys"], [3, 2, 1, "", "index_right"], [3, 2, 1, "", "index_right_keys"], [3, 2, 1, "", "items"], [3, 2, 1, "", "keys"], [3, 2, 1, "", "le"], [3, 2, 1, "", "len_elm"], [3, 2, 1, "", "lt"], [3, 2, 1, "", "pop"], [3, 2, 1, "", "pop_max"], [3, 2, 1, "", "pop_min"], [3, 2, 1, "", "remove"], [3, 2, 1, "", "reserve"], [3, 2, 1, "", "show"], [3, 2, 1, "", "tolist"], [3, 2, 1, "", "tolist_items"], [3, 2, 1, "", "values"]], "data_structures.avltree.avltree_multiset2": [[4, 1, 1, "", "AVLTreeMultiset2"]], "data_structures.avltree.avltree_multiset2.AVLTreeMultiset2": [[4, 2, 1, "", "add"], [4, 2, 1, "", "clear"], [4, 2, 1, "", "count"], [4, 2, 1, "", "discard"], [4, 2, 1, "", "discard_all"], [4, 2, 1, "", "ge"], [4, 2, 1, "", "get_max"], [4, 2, 1, "", "get_min"], [4, 2, 1, "", "gt"], [4, 2, 1, "", "le"], [4, 2, 1, "", "lt"], [4, 2, 1, "", "pop_max"], [4, 2, 1, "", "pop_min"], [4, 2, 1, "", "remove"], [4, 2, 1, "", "reserve"], [4, 2, 1, "", "tolist"], [4, 2, 1, "", "tolist_items"]], "data_structures.avltree.avltree_multiset3": [[5, 1, 1, "", "AVLTreeMultiset3"]], "data_structures.avltree.avltree_multiset3.AVLTreeMultiset3": [[5, 1, 1, "", "Node"], [5, 2, 1, "", "add"], [5, 2, 1, "", "clear"], [5, 2, 1, "", "count"], [5, 2, 1, "", "discard"], [5, 2, 1, "", "discard_all"], [5, 2, 1, "", "ge"], [5, 2, 1, "", "get_elm"], [5, 2, 1, "", "get_max"], [5, 2, 1, "", "get_min"], [5, 2, 1, "", "gt"], [5, 2, 1, "", "index"], [5, 2, 1, "", "index_keys"], [5, 2, 1, "", "index_right"], [5, 2, 1, "", "index_right_keys"], [5, 2, 1, "", "items"], [5, 2, 1, "", "keys"], [5, 2, 1, "", "le"], [5, 2, 1, "", "len_elm"], [5, 2, 1, "", "lt"], [5, 2, 1, "", "pop"], [5, 2, 1, "", "pop_max"], [5, 2, 1, "", "pop_min"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "show"], [5, 2, 1, "", "tolist"], [5, 2, 1, "", "tolist_items"], [5, 2, 1, "", "values"]], "data_structures.avltree.avltree_set": [[6, 1, 1, "", "AVLTreeSet"]], "data_structures.avltree.avltree_set.AVLTreeSet": [[6, 2, 1, "", "add"], [6, 2, 1, "", "clear"], [6, 2, 1, "", "discard"], [6, 2, 1, "", "ge"], [6, 2, 1, "", "get_max"], [6, 2, 1, "", "get_min"], [6, 2, 1, "", "gt"], [6, 2, 1, "", "index"], [6, 2, 1, "", "index_right"], [6, 2, 1, "", "le"], [6, 2, 1, "", "lt"], [6, 2, 1, "", "pop"], [6, 2, 1, "", "pop_max"], [6, 2, 1, "", "pop_min"], [6, 2, 1, "", "remove"], [6, 2, 1, "", "reserve"], [6, 2, 1, "", "tolist"]], "data_structures.avltree.avltree_set2": [[7, 1, 1, "", "AVLTreeSet2"]], "data_structures.avltree.avltree_set2.AVLTreeSet2": [[7, 2, 1, "", "add"], [7, 2, 1, "", "clear"], [7, 2, 1, "", "discard"], [7, 2, 1, "", "ge"], [7, 2, 1, "", "get_max"], [7, 2, 1, "", "get_min"], [7, 2, 1, "", "gt"], [7, 2, 1, "", "le"], [7, 2, 1, "", "lt"], [7, 2, 1, "", "pop_max"], [7, 2, 1, "", "pop_min"], [7, 2, 1, "", "remove"], [7, 2, 1, "", "reserve"], [7, 2, 1, "", "tolist"]], "data_structures.avltree.avltree_set3": [[8, 1, 1, "", "AVLTreeSet3"]], "data_structures.avltree.avltree_set3.AVLTreeSet3": [[8, 1, 1, "", "Node"], [8, 2, 1, "", "add"], [8, 2, 1, "", "clear"], [8, 2, 1, "", "discard"], [8, 2, 1, "", "ge"], [8, 2, 1, "", "get_max"], [8, 2, 1, "", "get_min"], [8, 2, 1, "", "gt"], [8, 2, 1, "", "index"], [8, 2, 1, "", "index_right"], [8, 2, 1, "", "le"], [8, 2, 1, "", "lt"], [8, 2, 1, "", "pop"], [8, 2, 1, "", "pop_max"], [8, 2, 1, "", "pop_min"], [8, 2, 1, "", "remove"], [8, 2, 1, "", "tolist"]], "data_structures.avltree.lazy_avltree": [[9, 1, 1, "", "LazyAVLTree"]], "data_structures.avltree.lazy_avltree.LazyAVLTree": [[9, 1, 1, "", "Node"], [9, 2, 1, "", "all_apply"], [9, 2, 1, "", "all_prod"], [9, 2, 1, "", "all_reverse"], [9, 2, 1, "", "apply"], [9, 2, 1, "", "clear"], [9, 2, 1, "", "insert"], [9, 2, 1, "", "merge"], [9, 2, 1, "", "pop"], [9, 2, 1, "", "prod"], [9, 2, 1, "", "reverse"], [9, 2, 1, "", "split"], [9, 2, 1, "", "tolist"]], "data_structures.avltree.persistent_avltree_list": [[10, 1, 1, "", "PersistentAVLTreeList"]], "data_structures.avltree.persistent_avltree_list.PersistentAVLTreeList": [[10, 1, 1, "", "Node"], [10, 2, 1, "", "insert"], [10, 2, 1, "", "merge"], [10, 2, 1, "", "pop"], [10, 2, 1, "", "split"], [10, 2, 1, "", "tolist"]], "data_structures.avltree.persistent_avltree_list.PersistentAVLTreeList.Node": [[10, 2, 1, "", "balance"], [10, 2, 1, "", "copy"]], "data_structures.avltree.persistent_lazy_avltree": [[11, 1, 1, "", "PersistentLazyAVLTree"]], "data_structures.avltree.persistent_lazy_avltree.PersistentLazyAVLTree": [[11, 1, 1, "", "Node"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "insert"], [11, 2, 1, "", "merge"], [11, 2, 1, "", "pop"], [11, 2, 1, "", "prod"], [11, 2, 1, "", "reverse"], [11, 2, 1, "", "split"], [11, 2, 1, "", "tolist"]], "data_structures.avltree.persistent_lazy_avltree.PersistentLazyAVLTree.Node": [[11, 2, 1, "", "balance"], [11, 2, 1, "", "copy"]], "data_structures.avltree.reversible_lazy_avltree": [[12, 1, 1, "", "ReversibleLazyAVLTree"]], "data_structures.avltree.reversible_lazy_avltree.ReversibleLazyAVLTree": [[12, 1, 1, "", "Node"], [12, 2, 1, "", "all_apply"], [12, 2, 1, "", "all_prod"], [12, 2, 1, "", "all_reverse"], [12, 2, 1, "", "apply"], [12, 2, 1, "", "clear"], [12, 2, 1, "", "insert"], [12, 2, 1, "", "merge"], [12, 2, 1, "", "pop"], [12, 2, 1, "", "prod"], [12, 2, 1, "", "reverse"], [12, 2, 1, "", "split"], [12, 2, 1, "", "tolist"]], "data_structures.fenwick_tree": [[14, 0, 0, "-", "dynamic_fenwick_tree"], [15, 0, 0, "-", "dynamic_fenwick_tree_2D"], [16, 0, 0, "-", "fenwick_tree"], [17, 0, 0, "-", "fenwick_tree_2D"], [18, 0, 0, "-", "fenwick_tree_RAQ"], [19, 0, 0, "-", "fenwick_tree_abst"]], "data_structures.fenwick_tree.dynamic_fenwick_tree": [[14, 1, 1, "", "DynamicFenwickTree"]], "data_structures.fenwick_tree.dynamic_fenwick_tree.DynamicFenwickTree": [[14, 2, 1, "", "add"], [14, 2, 1, "", "bisect_left"], [14, 2, 1, "", "bisect_right"], [14, 2, 1, "", "pref"], [14, 2, 1, "", "sum"]], "data_structures.fenwick_tree.dynamic_fenwick_tree_2D": [[15, 1, 1, "", "DynamicFenwickTree2D"]], "data_structures.fenwick_tree.dynamic_fenwick_tree_2D.DynamicFenwickTree2D": [[15, 2, 1, "", "add"], [15, 2, 1, "", "get"], [15, 2, 1, "", "set"], [15, 2, 1, "", "sum"]], "data_structures.fenwick_tree.fenwick_tree": [[16, 1, 1, "", "FenwickTree"]], "data_structures.fenwick_tree.fenwick_tree.FenwickTree": [[16, 2, 1, "", "add"], [16, 2, 1, "", "bisect_left"], [16, 2, 1, "", "bisect_right"], [16, 2, 1, "", "get_inversion_num"], [16, 2, 1, "", "pref"], [16, 2, 1, "", "prod"], [16, 2, 1, "", "show"], [16, 2, 1, "", "suff"], [16, 2, 1, "", "sum"], [16, 2, 1, "", "tolist"]], "data_structures.fenwick_tree.fenwick_tree_2D": [[17, 1, 1, "", "FenwickTree2D"]], "data_structures.fenwick_tree.fenwick_tree_2D.FenwickTree2D": [[17, 2, 1, "", "add"], [17, 2, 1, "", "get"], [17, 2, 1, "", "set"], [17, 2, 1, "", "sum"]], "data_structures.fenwick_tree.fenwick_tree_RAQ": [[18, 1, 1, "", "FenwickTreeRAQ"]], "data_structures.fenwick_tree.fenwick_tree_RAQ.FenwickTreeRAQ": [[18, 2, 1, "", "add"], [18, 2, 1, "", "add_range"], [18, 2, 1, "", "sum"], [18, 2, 1, "", "tolist"]], "data_structures.fenwick_tree.fenwick_tree_abst": [[19, 1, 1, "", "FenwickTreeAbst"]], "data_structures.fenwick_tree.fenwick_tree_abst.FenwickTreeAbst": [[19, 2, 1, "", "add"], [19, 2, 1, "", "pref"], [19, 2, 1, "", "prod"], [19, 2, 1, "", "suff"], [19, 2, 1, "", "sum"], [19, 2, 1, "", "tolist"]], "segment_tree": [[22, 1, 1, "", "SegmentTree"]], "segment_tree.SegmentTree": [[22, 2, 1, "", "all_prod"], [22, 2, 1, "", "get"], [22, 2, 1, "", "max_right"], [22, 2, 1, "", "min_left"], [22, 2, 1, "", "prod"], [22, 2, 1, "", "set"], [22, 2, 1, "", "show"], [22, 2, 1, "", "tolist"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python \u30e2\u30b8\u30e5\u30fc\u30eb"], "1": ["py", "class", "Python \u30af\u30e9\u30b9"], "2": ["py", "method", "Python \u30e1\u30bd\u30c3\u30c9"]}, "titleterms": {"csrarray": [], "module": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "partialpersistentarray": [], "persistentarray": [], "avltree": [], "package": [0, 1, 13], "submodules": [1, 13], ".avltree": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "_dict": 2, "_multiset": [3, 4, 5], "_set": [6, 7, 8], ".lazy": 9, "_avltree": [9, 10, 11, 12], ".persistent": [10, 11], "_list": 10, "_lazy": [11, 12], ".reversible": 12, "contents": [0, 1, 13], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "_structures": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "subpackages": 0, "expander": 20, "welcome": 23, "to": 23, "titanlib": 23, "'s": 23, "documentation": 23, "indices": 23, "and": 23, "tables": 23, "lazy": [], "persistent": [], "reversible": [], "segment": 22, "_tree": [13, 14, 15, 16, 17, 18, 19, 22], "dynamicfenwicktree": [], "2d": [15, 17], "fenwicktree": [], "fenwicktreeabst": [], "fenwicktreeraq": [], "fenwick": [], ".dynamic": [14, 15], "_fenwick": [14, 15], ".fenwick": [13, 14, 15, 16, 17, 18, 19], "_raq": 18, "_abst": 19, "library": 21, "_py": 21}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Welcome to titanlib's documentation!": [[23, "welcome-to-titanlib-s-documentation"]], "Indices and tables": [[23, "indices-and-tables"]], "data_structures": [[24, "data-structures"]], "data_structures package": [[0, "data-structures-package"]], "Subpackages": [[0, "subpackages"]], "Module contents": [[0, "module-data_structures"], [1, "module-data_structures.avltree"], [13, "module-data_structures.fenwick_tree"]], "data_structures.avltree package": [[1, "data-structures-avltree-package"]], "Submodules": [[1, "submodules"], [13, "submodules"]], "data_structures.avltree.avltree_dict module": [[2, "module-data_structures.avltree.avltree_dict"]], "data_structures.avltree.avltree_multiset module": [[3, "module-data_structures.avltree.avltree_multiset"]], "data_structures.avltree.avltree_multiset2 module": [[4, "module-data_structures.avltree.avltree_multiset2"]], "data_structures.avltree.avltree_multiset3 module": [[5, "module-data_structures.avltree.avltree_multiset3"]], "data_structures.avltree.avltree_set module": [[6, "module-data_structures.avltree.avltree_set"]], "data_structures.avltree.avltree_set2 module": [[7, "module-data_structures.avltree.avltree_set2"]], "data_structures.avltree.avltree_set3 module": [[8, "module-data_structures.avltree.avltree_set3"]], "data_structures.avltree.lazy_avltree module": [[9, "module-data_structures.avltree.lazy_avltree"]], "data_structures.avltree.persistent_avltree_list module": [[10, "module-data_structures.avltree.persistent_avltree_list"]], "data_structures.avltree.persistent_lazy_avltree module": [[11, "module-data_structures.avltree.persistent_lazy_avltree"]], "data_structures.avltree.reversible_lazy_avltree module": [[12, "module-data_structures.avltree.reversible_lazy_avltree"]], "data_structures.fenwick_tree package": [[13, "data-structures-fenwick-tree-package"]], "data_structures.fenwick_tree.dynamic_fenwick_tree module": [[14, "module-data_structures.fenwick_tree.dynamic_fenwick_tree"]], "data_structures.fenwick_tree.dynamic_fenwick_tree_2D module": [[15, "module-data_structures.fenwick_tree.dynamic_fenwick_tree_2D"]], "data_structures.fenwick_tree.fenwick_tree module": [[16, "module-data_structures.fenwick_tree.fenwick_tree"]], "data_structures.fenwick_tree.fenwick_tree_2D module": [[17, "module-data_structures.fenwick_tree.fenwick_tree_2D"]], "data_structures.fenwick_tree.fenwick_tree_RAQ module": [[18, "module-data_structures.fenwick_tree.fenwick_tree_RAQ"]], "data_structures.fenwick_tree.fenwick_tree_abst module": [[19, "module-data_structures.fenwick_tree.fenwick_tree_abst"]], "expander module": [[20, "expander-module"]], "Library_py": [[21, "library-py"]], "segment_tree module": [[22, "module-segment_tree"]]}, "indexentries": {"segmenttree (segment_tree \u306e\u30af\u30e9\u30b9)": [[22, "segment_tree.SegmentTree"]], "all_prod() (segment_tree.segmenttree \u306e\u30e1\u30bd\u30c3\u30c9)": [[22, "segment_tree.SegmentTree.all_prod"]], "get() (segment_tree.segmenttree \u306e\u30e1\u30bd\u30c3\u30c9)": [[22, "segment_tree.SegmentTree.get"]], "max_right() (segment_tree.segmenttree \u306e\u30e1\u30bd\u30c3\u30c9)": [[22, "segment_tree.SegmentTree.max_right"]], "min_left() (segment_tree.segmenttree \u306e\u30e1\u30bd\u30c3\u30c9)": [[22, "segment_tree.SegmentTree.min_left"]], "module": [[22, "module-segment_tree"]], "prod() (segment_tree.segmenttree \u306e\u30e1\u30bd\u30c3\u30c9)": [[22, "segment_tree.SegmentTree.prod"]], "segment_tree": [[22, "module-segment_tree"]], "set() (segment_tree.segmenttree \u306e\u30e1\u30bd\u30c3\u30c9)": [[22, "segment_tree.SegmentTree.set"]], "show() (segment_tree.segmenttree \u306e\u30e1\u30bd\u30c3\u30c9)": [[22, "segment_tree.SegmentTree.show"]], "tolist() (segment_tree.segmenttree \u306e\u30e1\u30bd\u30c3\u30c9)": [[22, "segment_tree.SegmentTree.tolist"]]}})